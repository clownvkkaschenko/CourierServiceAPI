---
openapi: 3.1.0
info:
  title: Courier Service API
  description: Прототип API сервиса курьерской доставки.
  version: 0.1.0
paths:
  "/api/v1/users":
    post:
      tags:
      - Пользователи
      summary: Регистрация пользователя/покупателя
      operationId: register_user_api_v1_users_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserPyd"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserInfoPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/users/token":
    post:
      tags:
      - Пользователи
      summary: Получение токена для пользователей
      operationId: login_for_user_access_token_api_v1_users_token_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateTokenPyd"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseTokenPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/users/orders/get":
    get:
      tags:
      - Пользователи
      summary: Заказы пользователя
      description: |-
        По умолчанию выводятся все заказы пользователя, но вы можете передать параметр запроса «active»,
        что-бы получить список только активных заказов, у которых статус заказа находится в
        состоянии «Поиск курьера» или «В пути».
      operationId: get_user_orders_api_v1_users_orders_get_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: active
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Выводим только активные заказы пользователя.
          title: Active
        description: Выводим только активные заказы пользователя.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BaseOrderPyd"
                title: Response Get User Orders Api V1 Users Orders Get Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/users/orders/get/{order_id}":
    get:
      tags:
      - Пользователи
      summary: Информация о заказе
      description: Подробная информация об одном выбранном заказе пользователя.
      operationId: get_user_order_api_v1_users_orders_get__order_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          title: Order Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DetailedUserOrderPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/users/shipping_cost/{restaurant_id}":
    get:
      tags:
      - Пользователи
      summary: Стоимость доставки
      description: Расчёт стоимости доставки из выбранного ресторана.
      operationId: shipping_cost_api_v1_users_shipping_cost__restaurant_id__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: restaurant_id
        in: path
        required: true
        schema:
          type: integer
          description: ID ресторана
          title: Restaurant Id
        description: ID ресторана
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ShippingCostPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/users/orders/post/{restaurant_id}":
    post:
      tags:
      - Пользователи
      summary: Сделать заказ
      description: Сделать заказ из выбранного ресторана.
      operationId: new_order_api_v1_users_orders_post__restaurant_id__post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: restaurant_id
        in: path
        required: true
        schema:
          type: integer
          description: ID ресторана
          title: Restaurant Id
        description: ID ресторана
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseUserCreateOrderPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/restaurants":
    post:
      tags:
      - Рестораны
      summary: Добавить ресторан
      operationId: create_restaurant_api_v1_restaurants_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DetailedRestaurantInfoPyd"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseRestaurantPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/restaurants/{restaurant_id}/orders":
    get:
      tags:
      - Рестораны
      summary: Заказы ресторана
      description: |-
        По умолчанию выводятся все заказы ресторана, но вы можете передать параметр запроса «active»,
        что-бы получить список только активных заказов, у которых статус заказа находится в
        состоянии «Поиск курьера» или «В пути».
      operationId: get_restaurant_orders_api_v1_restaurants__restaurant_id__orders_get
      parameters:
      - name: restaurant_id
        in: path
        required: true
        schema:
          type: integer
          description: ID ресторана
          title: Restaurant Id
        description: ID ресторана
      - name: active
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Выводим только активные заказы ресторана.
          title: Active
        description: Выводим только активные заказы ресторана.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SummaryRestaurantOrderPyd"
                title: Response Get Restaurant Orders Api V1 Restaurants  Restaurant
                  Id  Orders Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/restaurants/{restaurant_id}/orders/{order_id}":
    get:
      tags:
      - Рестораны
      summary: Информация о заказе
      description: Подробная информация об одном выбранном заказе ресторана.
      operationId: get_restaurant_order_api_v1_restaurants__restaurant_id__orders__order_id__get
      parameters:
      - name: restaurant_id
        in: path
        required: true
        schema:
          type: integer
          description: ID ресторана
          title: Restaurant Id
        description: ID ресторана
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          description: ID заказа
          title: Order Id
        description: ID заказа
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DetailedRestaurantOrderPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/couriers":
    post:
      tags:
      - Курьеры
      summary: Регистрация курьера
      operationId: register_couriers_api_v1_couriers_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCourierPyd"
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserInfoPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/couriers/token":
    post:
      tags:
      - Курьеры
      summary: Получение токена для курьеров
      operationId: login_for_courier_access_token_api_v1_couriers_token_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateTokenPyd"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ResponseTokenPyd"
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/couriers/available_orders":
    get:
      tags:
      - Курьеры
      summary: Свободные заказы
      description: Выводим список всех заказов, из всех рестаранов, которые могут
        взять курьеры.
      operationId: available_couriers_orders_api_v1_couriers_available_orders_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/CourierOrdersInfoPyd"
                type: array
                title: Response Available Couriers Orders Api V1 Couriers Available
                  Orders Get
      security:
      - OAuth2PasswordBearer: []
  "/api/v1/couriers/orders":
    get:
      tags:
      - Курьеры
      summary: Заказы курьера
      description: |-
        По умолчанию выводится только активный заказ курьера, у которого статус
        заказа «В пути». Но вы можете передать параметр запроса «all_orders»,
        что-бы получить список всех заказов, которые выполнял/выполняет курьер.
      operationId: courier_orders_api_v1_couriers_orders_get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: all_orders
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          description: Выводим все заказы курьера.
          title: All Orders
        description: Выводим все заказы курьера.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CourierOrdersInfoPyd"
                title: Response Courier Orders Api V1 Couriers Orders Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/couriers/orders/{order_id}":
    post:
      tags:
      - Курьеры
      summary: Взять заказ
      description: Курьер берёт в работу выбранный заказ.
      operationId: courier_accepts_order_api_v1_couriers_orders__order_id__post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          description: ID заказа
          title: Order Id
        description: ID заказа
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      tags:
      - Курьеры
      summary: Завершить заказ
      description: Курьер завершает выбранный заказ.
      operationId: courier_completes_order_api_v1_couriers_orders__order_id__put
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: order_id
        in: path
        required: true
        schema:
          type: integer
          description: ID заказа
          title: Order Id
        description: ID заказа
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
components:
  schemas:
    BaseOrderPyd:
      properties:
        id:
          type: integer
          title: Id
          description: ID заказа в БД
        status:
          type: string
          title: Status
          description: Статус заказа
        start_time:
          type: string
          format: date-time
          title: Start Time
          description: Время создания заказа
        restaurant_id:
          type: integer
          title: Restaurant Id
          description: ID ресторана, из которого сделан заказ
      type: object
      required:
      - id
      - status
      - start_time
      - restaurant_id
      title: BaseOrderPyd
      description: |-
        Pydantic модель с базовыми полями для информации о заказе.

        Fields:
            - id: int
            - status: str
            - start_time: datetime
            - restaurant_id: int
    CourierOrdersInfoPyd:
      properties:
        id:
          type: integer
          title: Id
          description: ID заказа в БД
        status:
          type: string
          title: Status
          description: Статус заказа
        start_time:
          type: string
          format: date-time
          title: Start Time
          description: Время создания заказа
        restaurant:
          allOf:
          - "$ref": "#/components/schemas/DetailedRestaurantInfoPyd"
          description: Ресторан из которого сделан заказ
        user:
          allOf:
          - "$ref": "#/components/schemas/DetailedUserInfoPyd"
          description: Пользователь который сделал заказ
      type: object
      required:
      - id
      - status
      - start_time
      - restaurant
      - user
      title: CourierOrdersInfoPyd
      description: Pydantic модель для вывода информации о заказе для курьера.
    CreateCourierPyd:
      properties:
        phone_number:
          type: string
          title: Phone Number
          description: Номер телефона
        name:
          type: string
          title: Name
          description: Имя
        surname:
          type: string
          title: Surname
          description: Фамилия
        password:
          type: string
          title: Password
          description: Пароль курьера
      type: object
      required:
      - phone_number
      - name
      - surname
      - password
      title: CreateCourierPyd
      description: |-
        Pydantic модель для регистрации курьера.

        Fields:
            - phone_number: str
            - name: str
            - surname: str
            - status: str
            - password: str
    CreateTokenPyd:
      properties:
        phone_number:
          type: string
          title: Phone Number
          description: Номер телефона
        password:
          type: string
          title: Password
          description: Пароль для входа
      type: object
      required:
      - phone_number
      - password
      title: CreateTokenPyd
      description: |-
        Pydantic модель для создания токена.

        Fields:
            - phone_number: str
            - password: str
    CreateUserPyd:
      properties:
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
          description: Город
          default: Тюмень
        street:
          type: string
          title: Street
          description: Улица
        house_number:
          type: string
          title: House Number
          description: Номер дома
        phone_number:
          type: string
          title: Phone Number
          description: Номер телефона
        name:
          type: string
          title: Name
          description: Имя
        surname:
          type: string
          title: Surname
          description: Фамилия
        password:
          type: string
          title: Password
          description: Пароль пользователя
      type: object
      required:
      - street
      - house_number
      - phone_number
      - name
      - surname
      - password
      title: CreateUserPyd
      description: |-
        Pydantic модель для регистрации пользователя.

        Fields:
            - city: Optional[str]
            - street: str
            - house_number: str
            - phone_number: str
            - name: str
            - surname: str
            - password: str
    DetailedRestaurantInfoPyd:
      properties:
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
          description: Город
          default: Тюмень
        street:
          type: string
          title: Street
          description: Улица
        house_number:
          type: string
          title: House Number
          description: Номер дома
        name:
          type: string
          title: Name
          description: Название ресторана
        opening_time:
          type: string
          format: time
          title: Opening Time
          description: Время открытия ресторана
        closing_time:
          type: string
          format: time
          title: Closing Time
          description: Время закрытия ресторана
        duration_delivery:
          type: integer
          title: Duration Delivery
          description: Примерное время доставки заказа/в минутах
      type: object
      required:
      - street
      - house_number
      - name
      - opening_time
      - closing_time
      - duration_delivery
      title: DetailedRestaurantInfoPyd
      description: |-
        Pydantic модель для создания/получения подробной информации ресторана.

        Fields:
            - name: str
            - opening_time: time
            - closing_time: time
            - duration_delivery: int
            - city: Optional[str]
            - street: str
            - house_number: str
    DetailedRestaurantOrderPyd:
      properties:
        id:
          type: integer
          title: Id
          description: ID заказа в БД
        status:
          type: string
          title: Status
          description: Статус заказа
        start_time:
          type: string
          format: date-time
          title: Start Time
          description: Время создания заказа
        restaurant_id:
          type: integer
          title: Restaurant Id
          description: ID ресторана, из которого сделан заказ
        end_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Time
          description: Время завершения доставки
        courier:
          anyOf:
          - "$ref": "#/components/schemas/UserInfoPyd"
          - type: 'null'
          description: Курьер
        user:
          allOf:
          - "$ref": "#/components/schemas/DetailedUserInfoPyd"
          description: Пользователь который сделал заказ
      type: object
      required:
      - id
      - status
      - start_time
      - restaurant_id
      - user
      title: DetailedRestaurantOrderPyd
      description: |-
        Pydantic модель с подробной информацией о заказе для ресторана.

        Fields:
            - id: int
            - status: str
            - start_time: datetime
            - restaurant_id: int
            - end_time: Optional[datetime]
            - courier: Optional[UserInfoPyd]
            - user: DetailedUserInfoPyd
    DetailedUserInfoPyd:
      properties:
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
          description: Город
          default: Тюмень
        street:
          type: string
          title: Street
          description: Улица
        house_number:
          type: string
          title: House Number
          description: Номер дома
        phone_number:
          type: string
          title: Phone Number
          description: Номер телефона
        name:
          type: string
          title: Name
          description: Имя
        surname:
          type: string
          title: Surname
          description: Фамилия
        id:
          type: integer
          title: Id
          description: ID пользователя в БД
      type: object
      required:
      - street
      - house_number
      - phone_number
      - name
      - surname
      - id
      title: DetailedUserInfoPyd
      description: |-
        Pydantic модель для вывода подробной информации о пользователе.

        Fields:
            - id: int
            - city: Optional[str]
            - street: str
            - house_number: str
            - phone_number: str
            - name: str
            - surname: str
    DetailedUserOrderPyd:
      properties:
        id:
          type: integer
          title: Id
          description: ID заказа в БД
        status:
          type: string
          title: Status
          description: Статус заказа
        restaurant_name:
          type: string
          title: Restaurant Name
          description: Название ресторана, из которого сделан заказ
        start_time:
          type: string
          format: date-time
          title: Start Time
          description: Время создания заказа
        end_time:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: End Time
          description: Время завершения доставки
        courier_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Courier Name
          description: Имя курьера
        duration_delivery:
          type: integer
          title: Duration Delivery
          description: Примерное время доставки заказа/в минутах
      type: object
      required:
      - id
      - status
      - restaurant_name
      - start_time
      - duration_delivery
      title: DetailedUserOrderPyd
      description: |-
        Pydantic модель с подробной информацией о заказе для пользователя.

        Fields:
            - id: int
            - status: str
            - restaurant_name: str
            - start_time: datetime
            - end_time: Optional[datetime]
            - courier_name: Optional[str]
            - duration_delivery: int
    HTTPValidationError:
      properties:
        detail:
          items:
            "$ref": "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ResponseRestaurantPyd:
      properties:
        id:
          type: integer
          title: Id
          description: ID ресторана в БД
        name:
          type: string
          title: Name
          description: Название ресторана
      type: object
      required:
      - id
      - name
      title: ResponseRestaurantPyd
      description: |-
        Pydantic модель для вывода информации о ресторане, после его создания.

        Fields:
            - id: int
            - name: str
    ResponseTokenPyd:
      properties:
        access_token:
          type: string
          title: Access Token
          description: Токен
        token_type:
          type: string
          title: Token Type
          description: Тип токена
      type: object
      required:
      - access_token
      - token_type
      title: ResponseTokenPyd
      description: |-
        Pydantic модель для вывода токена.

        Fields:
            - access_token: str
            - token_type: str
    ResponseUserCreateOrderPyd:
      properties:
        shipping_cost:
          type: integer
          title: Shipping Cost
          description: Стоимость доставки из ресторана
        id:
          type: integer
          title: Id
          description: ID заказа в БД
        status:
          type: string
          title: Status
          description: Статус заказа
        start_time:
          type: string
          format: date-time
          title: Start Time
          description: Время создания заказа
        restaurant_id:
          type: integer
          title: Restaurant Id
          description: ID ресторана, из которого сделан заказ
      type: object
      required:
      - shipping_cost
      - id
      - status
      - start_time
      - restaurant_id
      title: ResponseUserCreateOrderPyd
      description: |-
        Pydantic модель для вывода информации о заказе, после его создания.

        Fields:
            - id: int
            - status: str
            - start_time: datetime
            - restaurant_id: int
            - shipping_cost: int
    ShippingCostPyd:
      properties:
        shipping_cost:
          type: integer
          title: Shipping Cost
          description: Стоимость доставки из ресторана
      type: object
      required:
      - shipping_cost
      title: ShippingCostPyd
      description: |-
        Pydantic модель для расчёта стоимости доставки.

        Fields:
            - shipping_cost: int
    SummaryRestaurantOrderPyd:
      properties:
        id:
          type: integer
          title: Id
          description: ID заказа в БД
        status:
          type: string
          title: Status
          description: Статус заказа
        start_time:
          type: string
          format: date-time
          title: Start Time
          description: Время создания заказа
        restaurant_id:
          type: integer
          title: Restaurant Id
          description: ID ресторана, из которого сделан заказ
        courier_id:
          anyOf:
          - type: integer
          - type: 'null'
          title: Courier Id
          description: ID курьера
        user_id:
          type: integer
          title: User Id
          description: ID пользователя, который сделал заказ
      type: object
      required:
      - id
      - status
      - start_time
      - restaurant_id
      - user_id
      title: SummaryRestaurantOrderPyd
      description: |-
        Pydantic модель с краткой информацией о заказах ресторана.

        Fields:
            - id: int
            - status: str
            - start_time: datetime
            - restaurant_id: int
            - courier_id: Optional[int]
            - user_id: int
    UserInfoPyd:
      properties:
        phone_number:
          type: string
          title: Phone Number
          description: Номер телефона
        name:
          type: string
          title: Name
          description: Имя
        surname:
          type: string
          title: Surname
          description: Фамилия
        id:
          type: integer
          title: Id
          description: ID объекта в БД
      type: object
      required:
      - phone_number
      - name
      - surname
      - id
      title: UserInfoPyd
      description: |-
        Pydantic модель для вывода информации о пользователе/курьере.

        Fields:
            - id: int
            - phone_number: str
            - name: str
            - surname: str
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: token
